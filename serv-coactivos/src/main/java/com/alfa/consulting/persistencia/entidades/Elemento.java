package com.alfa.consulting.persistencia.entidades;

// Generated 07/05/2012 01:03:00 AM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Elemento generated by hbm2java
 */
@Entity
@Table(name = "ELEMENTO", schema = "dbo", catalog = "SISMAV2")
public class Elemento implements java.io.Serializable {

	private ElementoId id;
	private SubCategoria subCategoria;
	private String nombreElemento;
	private Integer estado;
	private String usuarioCreacion;
	private Date fechaCreacion;
	private String terminalCreacion;
	private String usuarioModificacion;
	private Date fechaModificacion;
	private String terminalModificacion;
	private Set<Problema> problemas = new HashSet<Problema>(0);
	private Set<Cambio> cambios = new HashSet<Cambio>(0);
	private Set<Solicitud> solicituds = new HashSet<Solicitud>(0);

	public Elemento() {
	}

	public Elemento(ElementoId id, SubCategoria subCategoria) {
		this.id = id;
		this.subCategoria = subCategoria;
	}

	public Elemento(ElementoId id, SubCategoria subCategoria,
			String nombreElemento, Integer estado, String usuarioCreacion,
			Date fechaCreacion, String terminalCreacion,
			String usuarioModificacion, Date fechaModificacion,
			String terminalModificacion, Set<Problema> problemas,
			Set<Cambio> cambios, Set<Solicitud> solicituds) {
		this.id = id;
		this.subCategoria = subCategoria;
		this.nombreElemento = nombreElemento;
		this.estado = estado;
		this.usuarioCreacion = usuarioCreacion;
		this.fechaCreacion = fechaCreacion;
		this.terminalCreacion = terminalCreacion;
		this.usuarioModificacion = usuarioModificacion;
		this.fechaModificacion = fechaModificacion;
		this.terminalModificacion = terminalModificacion;
		this.problemas = problemas;
		this.cambios = cambios;
		this.solicituds = solicituds;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "codigoCategoria", column = @Column(name = "codigoCategoria", nullable = false)),
			@AttributeOverride(name = "codigoSubCategoria", column = @Column(name = "codigoSubCategoria", nullable = false)),
			@AttributeOverride(name = "codigoElemento", column = @Column(name = "codigoElemento", nullable = false)) })
	public ElementoId getId() {
		return this.id;
	}

	public void setId(ElementoId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "codigoCategoria", referencedColumnName = "codigoCategoria", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "codigoSubCategoria", referencedColumnName = "codigoSubCategoria", nullable = false, insertable = false, updatable = false) })
	public SubCategoria getSubCategoria() {
		return this.subCategoria;
	}

	public void setSubCategoria(SubCategoria subCategoria) {
		this.subCategoria = subCategoria;
	}

	@Column(name = "nombreElemento", length = 50)
	public String getNombreElemento() {
		return this.nombreElemento;
	}

	public void setNombreElemento(String nombreElemento) {
		this.nombreElemento = nombreElemento;
	}

	@Column(name = "estado")
	public Integer getEstado() {
		return this.estado;
	}

	public void setEstado(Integer estado) {
		this.estado = estado;
	}

	@Column(name = "usuarioCreacion", length = 50)
	public String getUsuarioCreacion() {
		return this.usuarioCreacion;
	}

	public void setUsuarioCreacion(String usuarioCreacion) {
		this.usuarioCreacion = usuarioCreacion;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "fechaCreacion", length = 23)
	public Date getFechaCreacion() {
		return this.fechaCreacion;
	}

	public void setFechaCreacion(Date fechaCreacion) {
		this.fechaCreacion = fechaCreacion;
	}

	@Column(name = "terminalCreacion", length = 50)
	public String getTerminalCreacion() {
		return this.terminalCreacion;
	}

	public void setTerminalCreacion(String terminalCreacion) {
		this.terminalCreacion = terminalCreacion;
	}

	@Column(name = "usuarioModificacion", length = 50)
	public String getUsuarioModificacion() {
		return this.usuarioModificacion;
	}

	public void setUsuarioModificacion(String usuarioModificacion) {
		this.usuarioModificacion = usuarioModificacion;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "fechaModificacion", length = 23)
	public Date getFechaModificacion() {
		return this.fechaModificacion;
	}

	public void setFechaModificacion(Date fechaModificacion) {
		this.fechaModificacion = fechaModificacion;
	}

	@Column(name = "terminalModificacion", length = 50)
	public String getTerminalModificacion() {
		return this.terminalModificacion;
	}

	public void setTerminalModificacion(String terminalModificacion) {
		this.terminalModificacion = terminalModificacion;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "elemento")
	public Set<Problema> getProblemas() {
		return this.problemas;
	}

	public void setProblemas(Set<Problema> problemas) {
		this.problemas = problemas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "elemento")
	public Set<Cambio> getCambios() {
		return this.cambios;
	}

	public void setCambios(Set<Cambio> cambios) {
		this.cambios = cambios;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "elemento")
	public Set<Solicitud> getSolicituds() {
		return this.solicituds;
	}

	public void setSolicituds(Set<Solicitud> solicituds) {
		this.solicituds = solicituds;
	}

}
