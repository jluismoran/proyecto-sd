package com.alfa.consulting.persistencia.entidades;

// Generated 07/05/2012 01:03:00 AM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Problema generated by hbm2java
 */
@Entity
@Table(name = "PROBLEMA", schema = "dbo", catalog = "SISMAV2")
public class Problema implements java.io.Serializable {

	private int codigoProblema;
	private Elemento elemento;
	private Urgencia urgencia;
	private Solucion solucionByCodigoSolucionAlternativa;
	private Impacto impacto;
	private Estado estado;
	private Sitio sitio;
	private Prioridad prioridad;
	private Cliente cliente;
	private Solucion solucionByCodigoSolucion;
	private Date fechaVencimiento;
	private Date fechaCierre;
	private String titulo;
	private String descripcion;
	private Integer estado_1;
	private String usuarioCreacion;
	private Date fechaCreacion;
	private String terminalCreacion;
	private String usuarioModificacion;
	private Date fechaModificacion;
	private String terminalModificacion;
	private String impacto_1;
	private String causaRaiz;
	private String sintomas;
	private Set<ProblemaResponsable> problemaResponsables = new HashSet<ProblemaResponsable>(
			0);
	private Set<CambioProblema> cambioProblemas = new HashSet<CambioProblema>(0);
	private Set<ProblemaAdjunto> problemaAdjuntos = new HashSet<ProblemaAdjunto>(
			0);
	private Set<ProblemaTarea> problemaTareas = new HashSet<ProblemaTarea>(0);
	private Set<ProblemaCierre> problemaCierres = new HashSet<ProblemaCierre>(0);
	private Set<ProblemaIncidente> problemaIncidentes = new HashSet<ProblemaIncidente>(
			0);
	private Set<ProblemaNotificacion> problemaNotificacions = new HashSet<ProblemaNotificacion>(
			0);
	private Set<ProblemaEntTiempo> problemaEntTiempos = new HashSet<ProblemaEntTiempo>(
			0);
	private Set<ProblemaServicio> problemaServicios = new HashSet<ProblemaServicio>(
			0);
	private Set<ProblemaHistorial> problemaHistorials = new HashSet<ProblemaHistorial>(
			0);
	private Set<ProblemaProducto> problemaProductos = new HashSet<ProblemaProducto>(
			0);
	private Set<ProblemaNota> problemaNotas = new HashSet<ProblemaNota>(0);

	public Problema() {
	}

	public Problema(int codigoProblema) {
		this.codigoProblema = codigoProblema;
	}

	public Problema(int codigoProblema, Elemento elemento, Urgencia urgencia,
			Solucion solucionByCodigoSolucionAlternativa, Impacto impacto,
			Estado estado, Sitio sitio, Prioridad prioridad, Cliente cliente,
			Solucion solucionByCodigoSolucion, Date fechaVencimiento,
			Date fechaCierre, String titulo, String descripcion,
			Integer estado_1, String usuarioCreacion, Date fechaCreacion,
			String terminalCreacion, String usuarioModificacion,
			Date fechaModificacion, String terminalModificacion,
			String impacto_1, String causaRaiz, String sintomas,
			Set<ProblemaResponsable> problemaResponsables,
			Set<CambioProblema> cambioProblemas,
			Set<ProblemaAdjunto> problemaAdjuntos,
			Set<ProblemaTarea> problemaTareas,
			Set<ProblemaCierre> problemaCierres,
			Set<ProblemaIncidente> problemaIncidentes,
			Set<ProblemaNotificacion> problemaNotificacions,
			Set<ProblemaEntTiempo> problemaEntTiempos,
			Set<ProblemaServicio> problemaServicios,
			Set<ProblemaHistorial> problemaHistorials,
			Set<ProblemaProducto> problemaProductos,
			Set<ProblemaNota> problemaNotas) {
		this.codigoProblema = codigoProblema;
		this.elemento = elemento;
		this.urgencia = urgencia;
		this.solucionByCodigoSolucionAlternativa = solucionByCodigoSolucionAlternativa;
		this.impacto = impacto;
		this.estado = estado;
		this.sitio = sitio;
		this.prioridad = prioridad;
		this.cliente = cliente;
		this.solucionByCodigoSolucion = solucionByCodigoSolucion;
		this.fechaVencimiento = fechaVencimiento;
		this.fechaCierre = fechaCierre;
		this.titulo = titulo;
		this.descripcion = descripcion;
		this.estado_1 = estado_1;
		this.usuarioCreacion = usuarioCreacion;
		this.fechaCreacion = fechaCreacion;
		this.terminalCreacion = terminalCreacion;
		this.usuarioModificacion = usuarioModificacion;
		this.fechaModificacion = fechaModificacion;
		this.terminalModificacion = terminalModificacion;
		this.impacto_1 = impacto_1;
		this.causaRaiz = causaRaiz;
		this.sintomas = sintomas;
		this.problemaResponsables = problemaResponsables;
		this.cambioProblemas = cambioProblemas;
		this.problemaAdjuntos = problemaAdjuntos;
		this.problemaTareas = problemaTareas;
		this.problemaCierres = problemaCierres;
		this.problemaIncidentes = problemaIncidentes;
		this.problemaNotificacions = problemaNotificacions;
		this.problemaEntTiempos = problemaEntTiempos;
		this.problemaServicios = problemaServicios;
		this.problemaHistorials = problemaHistorials;
		this.problemaProductos = problemaProductos;
		this.problemaNotas = problemaNotas;
	}

	@Id
	@Column(name = "codigoProblema", unique = true, nullable = false)
	public int getCodigoProblema() {
		return this.codigoProblema;
	}

	public void setCodigoProblema(int codigoProblema) {
		this.codigoProblema = codigoProblema;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "codigoCategoria", referencedColumnName = "codigoCategoria"),
			@JoinColumn(name = "codigoSubCategoria", referencedColumnName = "codigoSubCategoria"),
			@JoinColumn(name = "codigoElemento", referencedColumnName = "codigoElemento") })
	public Elemento getElemento() {
		return this.elemento;
	}

	public void setElemento(Elemento elemento) {
		this.elemento = elemento;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "codigoUrgencia")
	public Urgencia getUrgencia() {
		return this.urgencia;
	}

	public void setUrgencia(Urgencia urgencia) {
		this.urgencia = urgencia;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "codigoSolucionAlternativa")
	public Solucion getSolucionByCodigoSolucionAlternativa() {
		return this.solucionByCodigoSolucionAlternativa;
	}

	public void setSolucionByCodigoSolucionAlternativa(
			Solucion solucionByCodigoSolucionAlternativa) {
		this.solucionByCodigoSolucionAlternativa = solucionByCodigoSolucionAlternativa;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "codigoImpacto")
	public Impacto getImpacto() {
		return this.impacto;
	}

	public void setImpacto(Impacto impacto) {
		this.impacto = impacto;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "codigoEstado")
	public Estado getEstado() {
		return this.estado;
	}

	public void setEstado(Estado estado) {
		this.estado = estado;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "codigoSitio")
	public Sitio getSitio() {
		return this.sitio;
	}

	public void setSitio(Sitio sitio) {
		this.sitio = sitio;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "codigoPrioridad")
	public Prioridad getPrioridad() {
		return this.prioridad;
	}

	public void setPrioridad(Prioridad prioridad) {
		this.prioridad = prioridad;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "codigoUsuario")
	public Cliente getCliente() {
		return this.cliente;
	}

	public void setCliente(Cliente cliente) {
		this.cliente = cliente;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "codigoSolucion")
	public Solucion getSolucionByCodigoSolucion() {
		return this.solucionByCodigoSolucion;
	}

	public void setSolucionByCodigoSolucion(Solucion solucionByCodigoSolucion) {
		this.solucionByCodigoSolucion = solucionByCodigoSolucion;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "fechaVencimiento", length = 23)
	public Date getFechaVencimiento() {
		return this.fechaVencimiento;
	}

	public void setFechaVencimiento(Date fechaVencimiento) {
		this.fechaVencimiento = fechaVencimiento;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "fechaCierre", length = 23)
	public Date getFechaCierre() {
		return this.fechaCierre;
	}

	public void setFechaCierre(Date fechaCierre) {
		this.fechaCierre = fechaCierre;
	}

	@Column(name = "titulo", length = 50)
	public String getTitulo() {
		return this.titulo;
	}

	public void setTitulo(String titulo) {
		this.titulo = titulo;
	}

	@Column(name = "descripcion", length = 5000)
	public String getDescripcion() {
		return this.descripcion;
	}

	public void setDescripcion(String descripcion) {
		this.descripcion = descripcion;
	}

	@Column(name = "estado")
	public Integer getEstado_1() {
		return this.estado_1;
	}

	public void setEstado_1(Integer estado_1) {
		this.estado_1 = estado_1;
	}

	@Column(name = "usuarioCreacion", length = 50)
	public String getUsuarioCreacion() {
		return this.usuarioCreacion;
	}

	public void setUsuarioCreacion(String usuarioCreacion) {
		this.usuarioCreacion = usuarioCreacion;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "fechaCreacion", length = 23)
	public Date getFechaCreacion() {
		return this.fechaCreacion;
	}

	public void setFechaCreacion(Date fechaCreacion) {
		this.fechaCreacion = fechaCreacion;
	}

	@Column(name = "terminalCreacion", length = 50)
	public String getTerminalCreacion() {
		return this.terminalCreacion;
	}

	public void setTerminalCreacion(String terminalCreacion) {
		this.terminalCreacion = terminalCreacion;
	}

	@Column(name = "usuarioModificacion", length = 50)
	public String getUsuarioModificacion() {
		return this.usuarioModificacion;
	}

	public void setUsuarioModificacion(String usuarioModificacion) {
		this.usuarioModificacion = usuarioModificacion;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "fechaModificacion", length = 23)
	public Date getFechaModificacion() {
		return this.fechaModificacion;
	}

	public void setFechaModificacion(Date fechaModificacion) {
		this.fechaModificacion = fechaModificacion;
	}

	@Column(name = "terminalModificacion", length = 50)
	public String getTerminalModificacion() {
		return this.terminalModificacion;
	}

	public void setTerminalModificacion(String terminalModificacion) {
		this.terminalModificacion = terminalModificacion;
	}

	@Column(name = "impacto", length = 5000)
	public String getImpacto_1() {
		return this.impacto_1;
	}

	public void setImpacto_1(String impacto_1) {
		this.impacto_1 = impacto_1;
	}

	@Column(name = "causaRaiz", length = 5000)
	public String getCausaRaiz() {
		return this.causaRaiz;
	}

	public void setCausaRaiz(String causaRaiz) {
		this.causaRaiz = causaRaiz;
	}

	@Column(name = "sintomas", length = 5000)
	public String getSintomas() {
		return this.sintomas;
	}

	public void setSintomas(String sintomas) {
		this.sintomas = sintomas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "problema")
	public Set<ProblemaResponsable> getProblemaResponsables() {
		return this.problemaResponsables;
	}

	public void setProblemaResponsables(
			Set<ProblemaResponsable> problemaResponsables) {
		this.problemaResponsables = problemaResponsables;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "problema")
	public Set<CambioProblema> getCambioProblemas() {
		return this.cambioProblemas;
	}

	public void setCambioProblemas(Set<CambioProblema> cambioProblemas) {
		this.cambioProblemas = cambioProblemas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "problema")
	public Set<ProblemaAdjunto> getProblemaAdjuntos() {
		return this.problemaAdjuntos;
	}

	public void setProblemaAdjuntos(Set<ProblemaAdjunto> problemaAdjuntos) {
		this.problemaAdjuntos = problemaAdjuntos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "problema")
	public Set<ProblemaTarea> getProblemaTareas() {
		return this.problemaTareas;
	}

	public void setProblemaTareas(Set<ProblemaTarea> problemaTareas) {
		this.problemaTareas = problemaTareas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "problema")
	public Set<ProblemaCierre> getProblemaCierres() {
		return this.problemaCierres;
	}

	public void setProblemaCierres(Set<ProblemaCierre> problemaCierres) {
		this.problemaCierres = problemaCierres;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "problema")
	public Set<ProblemaIncidente> getProblemaIncidentes() {
		return this.problemaIncidentes;
	}

	public void setProblemaIncidentes(Set<ProblemaIncidente> problemaIncidentes) {
		this.problemaIncidentes = problemaIncidentes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "problema")
	public Set<ProblemaNotificacion> getProblemaNotificacions() {
		return this.problemaNotificacions;
	}

	public void setProblemaNotificacions(
			Set<ProblemaNotificacion> problemaNotificacions) {
		this.problemaNotificacions = problemaNotificacions;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "problema")
	public Set<ProblemaEntTiempo> getProblemaEntTiempos() {
		return this.problemaEntTiempos;
	}

	public void setProblemaEntTiempos(Set<ProblemaEntTiempo> problemaEntTiempos) {
		this.problemaEntTiempos = problemaEntTiempos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "problema")
	public Set<ProblemaServicio> getProblemaServicios() {
		return this.problemaServicios;
	}

	public void setProblemaServicios(Set<ProblemaServicio> problemaServicios) {
		this.problemaServicios = problemaServicios;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "problema")
	public Set<ProblemaHistorial> getProblemaHistorials() {
		return this.problemaHistorials;
	}

	public void setProblemaHistorials(Set<ProblemaHistorial> problemaHistorials) {
		this.problemaHistorials = problemaHistorials;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "problema")
	public Set<ProblemaProducto> getProblemaProductos() {
		return this.problemaProductos;
	}

	public void setProblemaProductos(Set<ProblemaProducto> problemaProductos) {
		this.problemaProductos = problemaProductos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "problema")
	public Set<ProblemaNota> getProblemaNotas() {
		return this.problemaNotas;
	}

	public void setProblemaNotas(Set<ProblemaNota> problemaNotas) {
		this.problemaNotas = problemaNotas;
	}

}
